openapi: "3.0.2"
info:
  title: Smart Home API
  version: "1.0"
  description: API for making a Smart Home System
servers:
  - url: "/v1"
# add tag
tags:
  - name: IoT
    description: IoT devices
  - name: devices
    description: Device handling
  - name: rooms
    description: Room handling
paths:
  /register:
    post:
      summary: Register a new IoT device
      description: For starting the communication with the API, the device must be registered, then it can be accessed by its ID within the application
      tags:
        - IoT
      parameters:
        - name: type
          in: query
          description: Type of the device
          required: true
          schema:
            type: string
            $ref: "#/components/schemas/deviceType"
        - name: id
          in: query
          description: Unique identifier of the device
          required: true
          schema:
            type: number
            example: 1234
        - name: operations
          in: query
          description: List of operations supported by the device
          required: true
          schema:
            $ref: "#/components/schemas/operations"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: Type of the device
                  enum: [curtain, air-conditioner, tv, sound-system, light]
                id:
                  type: number
                  description: Unique identifier of the device
                  example: 1234
                operations:
                  type: array
                  description: List of operations supported by the device
                  example: [open, close]
      responses:
        "201":
          description: Device registered successfully
        "409":
          description: ID already registered
        "400":
          description: Invalid request body
  /devices:
    summary: Get all registered devices
    description: Get all registered devices
    get:
      summary: Get all registered devices
      description: Get all registered devices
      tags:
        - devices
      responses:
        "200":
          description: List of registered devices
          content:
            application/json:
              schema:
                type: array
                $ref: "#/components/schemas/device"
              example:
                [
                  { type: curtain, id: 1234, operations: [open, close] },
                  {
                    type: air-conditioner,
                    id: 5678,
                    operations: [setTemperature, turnOn, turnOff],
                  },
                ]
        "404":
          description: No devices registered
  /devices/{id}:
    summary: Device handling
    description: Device handling
    parameters:
      - name: id
        in: path
        description: Unique identifier of the device
        required: true
        schema:
          type: number
    get:
      summary: Get device information
      description: Get information from a specific device
      tags:
        - devices
      responses:
        "200":
          description: Device found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/device"
                example: { type: curtain, id: 1234, operations: [open, close] }
        "404":
          description: Device not found
    put:
      summary: Update device status
      description: Use one of the supported operations to update the device status
      tags:
        - devices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  description: Operation to be performed
                  enum:
                    [
                      open,
                      close,
                      setTemperature,
                      setVolume,
                      setChannel,
                      turnOn,
                      turnOff,
                    ]
                value:
                  type: number
                  description: Value to be set
                  example: 20
      responses:
        "200":
          description: Device updated successfully
        "404":
          description: Device not found
        "400":
          description: Invalid request body
  /rooms:
    summary: Get all registered rooms
    description: Get all registered rooms
    get:
      summary: Get all registered rooms
      description: Get all registered rooms
      tags:
        - rooms
      responses:
        "200":
          description: List of registered rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: Name of the room
                  example: Kitchen
        "404":
          description: No rooms registered
  /rooms/{name}:
    summary: Room handling
    description: Room handling
    parameters:
      - name: name
        in: path
        description: Name of the room
        required: true
        schema:
          type: string
    get:
      summary: Get room information
      description: Get all devices in a specific room
      tags:
        - rooms
      responses:
        "200":
          description: Room found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the room
                    example: Kitchen
                  devices:
                    type: array
                    description: List of devices in the room
                    example: [1234, 5678]
        "404":
          description: Room not found
    put:
      summary: Update room devices
      description: Update the list of devices connected to a specific room, when the propertie of the query 'devices' is set it updates the list of devices, when the propertie of the query 'power' is set it updates the power status of the room
      tags:
        - rooms
      parameters:
        - name: power
          in: query
          description: Power status of the room
          required: false
          schema:
            type: boolean
            example: true
        - name: devices
          in: query
          description: List of devices to be added to the room
          required: false
          schema:
            type: array
            items:
              type: number
              description: Unique identifier of the device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                power:
                  type: boolean
                  description: Power status of the room
                  example: true
      responses:
        "200":
          description: Room devices updated successfully
        "404":
          description: Room not found
        "400":
          description: Invalid request body
    delete:
      summary: Delete room
      description: Delete room
      tags:
        - rooms
      responses:
        "200":
          description: Room deleted successfully
        "404":
          description: Room not found
components:
  schemas:
    deviceType:
      type: string
      description: Type of the device
      enum: [curtain, air-conditioner, tv, sound-system, light]
    operations:
      type: array
      description: List of operations supported by the device
      enum:
        [open, close, setTemperature, setVolume, setChannel, turnOn, turnOff]
    device:
      type: object
      properties:
        type:
          type: string
          description: Type of the device
          $ref: "#/components/schemas/deviceType"
          example: curtain
        id:
          type: number
          description: Unique identifier of the device
          example: 1234
        operations:
          type: array
          description: List of operations supported by the device
          $ref: "#/components/schemas/operations"
          example: [open, close]
